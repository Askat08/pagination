{"version":3,"sources":["components/NavBar.js","components/Pagination.js","components/PersonInfo.js","components/Modal.js","components/GridPics.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","ScrollTop","props","children","window","classes","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","BackToTop","Fragment","CssBaseline","AppBar","Toolbar","Typography","variant","id","Fab","color","size","aria-label","marginTop","marginBottom","PaginationSquare","handlePageChange","totalPages","Pagination","count","shape","onChange","value","item","width","PersonInfo","Grid","xs","container","justify","noWrap","card","known_for","map","src","poster_path","alt","original_title","style","boxShadow","paragraph","release_date","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","shadows","padding","TransitionsModal","React","useState","open","setOpen","Button","name","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","flexGrow","img","height","boxSizing","GridPics","isLoading","data","Skeleton","animation","profile_path","title","App","setData","page","setPage","setTotalPages","setIsLoading","useEffect","fetchData","fetch","then","res","json","results","total_pages","setTimeout","Container","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd78d0d1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Zoom from '@material-ui/core/Zoom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 300,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      '#back-to-top-anchor'\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role='presentation' className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function BackToTop(props) {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar>\n        <Toolbar>\n          <Typography variant='h6'>Seytech-Pagination</Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id='back-to-top-anchor' />\n      <ScrollTop {...props}>\n        <Fab color='primary' size='small' aria-label='scroll back to top'>\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(5),\n      marginBottom: theme.spacing(5),\n    },\n  },\n}));\n\nexport default function PaginationSquare(props) {\n  const classes = useStyles();\n  const { handlePageChange, totalPages } = props;\n  return (\n    <div className={classes.root}>\n      <Pagination\n        count={totalPages}\n        variant='outlined'\n        shape='rounded'\n        onChange={(event, value) => handlePageChange(event, value)}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '20px',\n  },\n\n  item: {\n    width: '200px',\n  },\n}));\n\nexport default function PersonInfo(props) {\n  const classes = useStyles();\n\n  const profileBaseUrl = 'http://image.tmdb.org/t/p/w185';\n  return (\n    <Grid className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify='center' spacing={3} noWrap>\n          {props.card.known_for.map((card) => (\n            <Grid key={card.id} item className={classes.item}>\n              <img\n                src={`${profileBaseUrl}${card.poster_path}`}\n                alt={card.original_title}\n                style={{\n                  boxShadow:\n                    '0 2px 14px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n                }}\n              />\n              <Typography paragraph variant='overline' color='textPrimary'>\n                <strong>Title: </strong>\n                {card.original_title}\n              </Typography>\n              <Typography color='primary' variant='overline'>\n                <strong>Date: </strong>\n                {card.release_date}\n              </Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\nimport PersonInfo from './PersonInfo';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function TransitionsModal(props) {\n  const classes = useStyles();\n  const { card } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        variant='outlined'\n        color='primary'\n        onClick={handleOpen}\n        style={{\n          width: '100%',\n          marginTop: '10px',\n        }}>\n        {card.name}\n      </Button>\n      <Modal\n        aria-labelledby='transition-modal-title'\n        aria-describedby='transition-modal-description'\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <PersonInfo card={card} />\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport SimpleModal from './Modal';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '20px',\n  },\n  img: {\n    width: '100%',\n    height: '100%',\n    boxSizing: 'border- box',\n  },\n}));\n\nexport default function GridPics(props) {\n  const { isLoading } = props;\n  const classes = useStyles();\n\n  const profileBaseUrl = 'http://image.tmdb.org/t/p/w185';\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify='center' spacing={3}>\n          {props.data.map((card) => (\n            <Grid key={card.id} item>\n              {isLoading ? (\n                <>\n                  <Skeleton\n                    variant='rect'\n                    width={210}\n                    height={250}\n                    animation='wave'\n                  />\n                  <Skeleton animation='wave' height={50} />\n                </>\n              ) : (\n                <>\n                  <div className='movie-pic box'>\n                    <img\n                      className={classes.img}\n                      src={`${profileBaseUrl}${card.profile_path}`}\n                      alt={card.title}\n                    />\n                  </div>\n                  <SimpleModal card={card} />\n                </>\n              )}\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport MenuAppBar from './components/NavBar';\nimport PaginationSquare from './components/Pagination';\nimport GridPics from './components/GridPics';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = React.useState(true);\n  useEffect(() => {\n    fetchData(page);\n  }, []);\n\n  const fetchData = (page) => {\n    setIsLoading(true);\n    fetch(\n      `https://api.themoviedb.org/3/person/popular?api_key=df8b08ecb436696fee41a00f8d87a540&language=en&page=${page}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setData(data.results);\n        setTotalPages(data.total_pages);\n      });\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    fetchData(value);\n  };\n\n  return (\n    <Container>\n      <MenuAppBar />\n      <PaginationSquare\n        handlePageChange={handlePageChange}\n        totalPages={totalPages}\n        page={page}\n      />\n      <GridPics\n        data={data}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        overflow='visible'\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}